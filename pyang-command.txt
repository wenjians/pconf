


usage example 
java -jar pconf.jar pyang 
        -yang C:\Users\wenjians.AD4\Documents\GitHub\pconf\parameters 
        -yin C:\Users\wenjians.AD4\Documents\GitHub\pconf\parameters\yin
        -pdd C:\Users\wenjians.AD4\Documents\GitHub\pconf\parameters\export\pdd.xls
        -cliboard scm
        -clixml C:\Users\wenjians.AD4\Documents\GitHub\pconf\parameters\syslog\gfi-syslog.xml
        -clitree C:\Users\wenjians.AD4\Documents\GitHub\pconf\parameters\export
        -cliexport C:\Users\wenjians.AD4\Documents\GitHub\pconf\parameters\export

Linux: 
java -jar pconf.jar -pyang -yang /mnt/hgfs/pconf/parameters -yin /mnt/hgfs/pconf/parameters/yin -pdd /mnt/hgfs/pconf/parameters/export/pdd.xls


pyang -f yin /mnt/hgfs/pconf/parameters/syslog/gw-syslog.yang -o /mnt/hgfs/pconf/parameters/yin/gw-syslog.xml -p /mnt/hgfs/pconf/parameters/external -p /mnt/hgfs/pconf/parameters/extensions -p /mnt/hgfs/pconf/parameters/common -p /mnt/hgfs/pconf/parameters/syslog 

pyang -f tree /mnt/hgfs/pconf/parameters/ip/gw-ipng-filter.yang  -p /mnt/hgfs/pconf/parameters/external -p /mnt/hgfs/pconf/parameters/extensions -p /mnt/hgfs/pconf/parameters/common -p /mnt/hgfs/pconf/parameters/ip

module: gw-ipng-filter
   +--rw state?   enumeration
   +--rw rules* [name]
      +--rw name              string
      +--rw sate?             enumeration
      +--rw action?           enumeration
      +--rw protocol?         enumeration
      +--rw application?      enumeration
      +--rw type?             enumeration
      +--rw group-id?         string
      +--rw position?         string
      +--rw direction?        enumeration
      +--rw local-address?    string
      +--rw remote-address?   string
      +--rw local-port?       string
      +--rw behavior?         enumeration
      +--rw log?              enumeration
diag@ubuntu:/mnt/hgfs/pconf$ 

pyang -f tree /mnt/hgfs/pconf/parameters/realm/gw-ip-realm.yang  -p /mnt/hgfs/pconf/parameters/external -p /mnt/hgfs/pconf/parameters/extensions -p /mnt/hgfs/pconf/parameters/common -p /mnt/hgfs/pconf/parameters/realm
module: gw-ip-realm
   +--ro version?          uint32
   +--rw realm-table* [name]
   |  +--rw name              h248:iprealm-name
   |  +--rw ip-if* [ip]
   |  |  +--rw ip      gwip:ip-address
   |  |  +--rw vlan?   gwip:vlan-id
   |  +--rw type?             enumeration
   |  +--rw media-profile?    string
   |  +--rw admin-state?      admin-state
   |  +--rw oper-down?        enumeration
   |  +--ro oper-state?       string
   |  +--rw service-change?   enumeration
   |  +--rw vmg-id*           h248:vmg-id
   |  +--rw cp-monitoring
   |     +--rw ip-address?      gwip:ip-address
   |     +--rw admin-state?     admin-state
   |     +--rw depend-port?     gwlpa:eth-lpa
   |     +--ro oper-state?      string
   |     +--ro suspend-state?   string
   +--rw cp-rx-interval?   uint32
   +--rw cp-tx-interval?   uint32
   +--rw cp-delay?         uint32
diag@ubuntu:/mnt/hgfs/pconf$ 



Validates the YANG module in <filename> (or stdin), and all its dependencies.

Options:
  -h, --help            Show this help message and exit
  -v, --version         Show version number and exit
  -e, --list-errors     Print a listing of all error and warning codes and
                        exit.
  --print-error-code    On errors, print the error code instead of the error
                        message.
  -W WARNING            If WARNING is 'error', treat all warnings as errors,
                        except any listed WARNING. If WARNING is 'none', do
                        not report any warnings.
  -E WARNING            Treat each WARNING as an error.  For a list of
                        warnings, use --list-errors.
  --canonical           Validate the module(s) according to the canonical YANG
                        order.
  --max-line-length=MAX_LINE_LEN
  --max-identifier-length=MAX_IDENTIFIER_LEN
  -f FORMAT, --format=FORMAT
                        Convert to FORMAT.  Supported formats are: hypertree,
                        dsdl, depend, xmi, yin, tree, jstree, yang, xsd, uml,
                        jtox, jsonxsl
  -o OUTFILE, --output=OUTFILE
                        Write the output to OUTFILE instead of stdout.
  -p PATH, --path=PATH  :-separated search path for yin and yang modules
  --plugindir=PLUGINDIR
                        Load pyang plugins from PLUGINDIR
  --strict              Force strict YANG compliance.
  --lax-xpath-checks    Lax check of XPath expressions.
  --trim-yin            In YIN input modules, trim whitespace in textual
                        arguments.
  -L, --hello           Filename of a server's hello message is given instead
                        of module filename(s).
  --ietf                Validate the module(s) according to IETF rules.

  YANG output specific options:
    --yang-canonical    Print in canonical order
    --yang-remove-unused-imports

  YIN output specific options:
    --yin-canonical     Print in canonical order
    --yin-pretty-strings
                        Pretty print strings

  Hybrid DSDL schema output specific options:
    --dsdl-no-documentation
                        No output of DTD compatibility documentation
                        annotations
    --dsdl-no-dublin-core
                        No output of Dublin Core metadata annotations
    --dsdl-record-defs  Record all top-level defs (even if not used)

  DEPRECATED: XSD output specific options:
    --xsd-global-complex-types
                        Make all complex types global instead of inline
    --xsd-groups        EXPERIMENTAL: does not work correctly
    --xsd-no-appinfo    Do not print YANG specific appinfo
    --xsd-no-imports    Do not generate xs:import elements
    --xsd-break-pattern
                        Break XSD pattern so that they fit into RFCs
    --xsd-no-lecture    Do not generate the lecture about how the XSD can be
                        used

  Tree output specific options:
    --tree-help         Print help on tree symbols and exit
    --tree-depth=TREE_DEPTH
                        Number of levels to print
    --tree-path=TREE_PATH
                        Subtree to print

  XMI output specific options:
    --xmi-path=XMI_TREE_PATH
                        Subtree to print
    --xmi-no-assoc-names
                        Do not print names for associations

  UML specific options:
    --uml-classes-only  Generate UML with classes only, no attributes
    --uml-split-pages=PAGES_LAYOUT
                        Generate UML output split into pages (separate .png
                        files), NxN, example 2x2
    --uml-output-directory=OUTPUTDIR
                        Put generated <modulename>.png or <title>.png file(s)
                        in OUTPUTDIR (default img/)
    --uml-title=TITLE   Set the title of the generated UML, including the
                        output file name
    --uml-header=HEADER
                        Set the page header of the generated UML
    --uml-footer=FOOTER
                        Set the page footer of the generated UML
    --uml-long-identifiers
                        Use the full schema identifiers for UML class names.
    --uml-inline-groupings
                        Inline groupings where they are used.
    --uml-inline-augments
                        Inline groupings where they are used.
    --uml-description   Include description of structural nodes in diagram.
    --uml-no=NO         Suppress parts of the diagram.  Valid suppress values
                        are: module, uses, leafref, identity, identityref,
                        typedef, import, annotation, circles, stereotypes.
                        Annotations suppresses YANG constructs represented as
                        annotations such as config statements for containers
                        and module info. Module suppresses module box around
                        the diagram and module information.  Example --uml-
                        no=circles,stereotypes,typedef,import
    --uml-truncate=TRUNCATE
                        Leafref attributes and augment elements can have long
                        paths making the classes too wide.  This option will
                        only show the tail of the path.  Example --uml-
                        truncate=augment,leafref
    --uml-filter        Generate filter file, comment out lines with '-' and
                        use with option '--filter-file' to filter the UML
                        diagram
    --uml-filter-file=FILTER_FILE
                        NOT IMPLEMENTED: Only paths in the filter file will be
                        included in the diagram

  Depend output specific options:
    --depend-target=DEPEND_TARGET
                        Makefile rule target
    --depend-no-submodules
                        Do not generate dependencies for included submodules
    --depend-extension=DEPEND_EXTENSION
                        YANG module file name extension
    --depend-include-path
                        Include file path in the prerequisites
    --depend-ignore-module=DEPEND_IGNORE
                        (sub)module to ignore in the prerequisites.  This
                        option can be given multiple times.

  Hypertree output specific options:
    --hypertree-help    Print help on hypertree usage and exit
    --hypertree-path=HT_TREE_PATH
                        Subtree to print

  JSTree output specific options:
    --jstree-help       Print help on JavaScript tree usage and exit
diag@ubuntu:~$ 